defmodule Beatbot.CardValues do
  @moduledoc """
  This module contains the functions to generate prompts. These values were randomly generated
  by ChatGPT 2.5. Eventually, these values could potentially be added to a sqlite or cubdb
  instance, but that really feels like overkill. OTOH, it might be prudent to remove the values
  into a separate file/variable to keep the generation logic clearer and shorten the functions.
  """
  def get_character(chance \\ 10) do
    # selection = Enum.random([1..10])
    IO.puts(chance)

    cond do
      chance != 0 ->
        "Be a(n) " <>
          Enum.random([
            "Dentist",
            "Registered Nurse",
            "Pharmacist",
            "Computer Systems Analyst",
            "Physician",
            "Database Administrator",
            "Software Developer",
            "Physical Therapist",
            "Web Developer",
            "Dental Hygienist",
            "Occupational Therapist",
            "Veterinarian",
            "Computer Programmer",
            "School Psychologist",
            "Physical Therapist Assistant",
            "Translator",
            "Mechanical Engineer",
            "Veterinary Technician",
            "Epidemiologist",
            "IT Manager",
            "Market Research Analyst",
            "Diagnostic Medical Sonographer",
            "Computer Systems Administrator",
            "Respiratory Therapist",
            "Medical Secretary",
            "Civil Engineer",
            "Substance Abuse Counselor",
            "Speech-Language Pathologist",
            "Landscaper",
            "Radiologic Technologist",
            "Cost Estimator",
            "Financial Advisor",
            "Family Therapist",
            "Medical Assistant",
            "Lawyer",
            "Accountant",
            "Compliance Officer",
            "High School Teacher",
            "Clinical Laboratory Technician",
            "Maintenance Worker",
            "Repair Worker",
            "Bookkeeper",
            "Accountant",
            "Auditor",
            "Financial Manager",
            "Fitness Trainer",
            "Insurance Agent",
            "Elementary School Teacher",
            "Dental Assistant",
            "Management Analyst",
            "Home Health Aide",
            "Pharmacy Technician",
            "Construction Manager",
            "Public Relations Specialist",
            "Middle School Teacher",
            "Massage Therapist",
            "Paramedic",
            "Preschool Teacher",
            "Hairdresser",
            "Marketing Manager",
            "Patrol Officer",
            "School Counselor",
            "Executive Assistant",
            "Financial Analyst",
            "Personal Care Aide",
            "Clinical Social Worker",
            "Business Operations Manager",
            "Loan Officer",
            "Event Planner",
            "Mental Health Counselor",
            "Nursing Aide",
            "Sales Representative",
            "Architect",
            "Sales Manager",
            "HR Specialist",
            "Plumber",
            "Real Estate Agent",
            "Glazier",
            "Art Director",
            "Customer Service Representative",
            "Logistician",
            "Auto Mechanic",
            "Bus Driver",
            "Restaurant Cook",
            "Social Worker",
            "Administrative Assistant",
            "Receptionist",
            "Paralegal",
            "Concrete Finisher",
            "Painter",
            "Sports Coach",
            "Teacher Assistant",
            "Brickmason",
            "Cashier",
            "Janitor",
            "Electrician",
            "Delivery Truck Driver",
            "Housekeeper",
            "Carpenter",
            "Security Guard",
            "Construction Worker",
            "Fabricator",
            "Telemarketer"
          ])

      chance == 0 ->
        "Be yourself/your character"
    end
  end

  def get_emotion do
    selection = Enum.random(1..10)
    # IO.puts(selection)

    emotion =
      cond do
        selection > 1 ->
          " who is " <>
            Enum.random([
              "Accepting",
              "Open",
              "Calm",
              "Centered",
              "Content",
              "Fulfilled",
              "Patient",
              "Peaceful",
              "Present",
              "Relaxed",
              "Serene",
              "Trusting",
              "Amazed",
              "Awe",
              "Blissful",
              "Delighted",
              "Eager",
              "Ecstatic",
              "Enchanted",
              "Energized",
              "Engaged",
              "Enthusiastic",
              "Excited",
              "Free",
              "Happy",
              "Inspired",
              "Invigorated",
              "Lively",
              "Passionate",
              "Playful",
              "Radiant",
              "Refreshed",
              "Rejuvenated",
              "Renewed",
              "Satisfied",
              "Thrilled",
              "Vibrant",
              "Angry",
              "Annoyed",
              "Agitated",
              "Aggravated",
              "Bitter",
              "Contemptuous",
              "Cynical",
              "Disdainful",
              "Disgruntled",
              "Disturbed",
              "Edgy",
              "Exasperated",
              "Frustrated",
              "Furious",
              "Grouchy",
              "Hostile",
              "Impatient",
              "Irritated",
              "Irate",
              "Moody",
              "On edge",
              "Outraged",
              "Pissed",
              "Resentful",
              "Upset",
              "Vindictive",
              "Courageous",
              "Powerful",
              "Adventurous",
              "Brave",
              "Capable",
              "Confident",
              "Daring",
              "Determined",
              "Free",
              "Grounded",
              "Proud",
              "Strong",
              "Worthy",
              "Valiant",
              "Connected",
              "Loving",
              "Accepting",
              "Affectionate",
              "Caring",
              "Compassionate",
              "Empathic",
              "Fulfilled",
              "Present",
              "Safe",
              "Warm",
              "Worthy",
              "Curious",
              "Engaged",
              "Exploring",
              "Fascinated",
              "Interested",
              "Intrigued",
              "Involved",
              "Stimulated",
              "Despairing",
              "Sad",
              "Anguish",
              "Depressed",
              "Despondent",
              "Disappointed",
              "Discouraged",
              "Forlorn",
              "Gloomy",
              "Grief-ridden",
              "Heartbroken",
              "Hopeless",
              "Lonely",
              "Longing",
              "Melancholic",
              "Sorrowful",
              "Teary",
              "Unhappy",
              "Upset",
              "Weary",
              "Yearning",
              "Disconnected",
              "Numb",
              "Aloof",
              "Bored",
              "Confused",
              "Distant",
              "Empty",
              "Indifferent",
              "Isolated",
              "Lethargic",
              "Listless",
              "Removed",
              "Resistant",
              "Shut Down",
              "Uneasy",
              "Withdrawn",
              "Embarrassed",
              "Shameful",
              "Ashamed",
              "Humiliated",
              "Inhibited",
              "Mortified",
              "Self-conscious",
              "Useless",
              "Weak",
              "Worthless",
              "Fearing",
              "Afraid",
              "Anxious",
              "Apprehensive",
              "Frightened",
              "Hesitant",
              "Nervous",
              "Paniced",
              "Paralyzed",
              "Scared",
              "Terrified",
              "Worried",
              "Fragile",
              "Helpless",
              "Sensitive",
              "Grateful",
              "Appreciative",
              "Blessed",
              "Delighted",
              "Fortunate",
              "Graceful",
              "Humbled",
              "Lucky",
              "Moved",
              "Thankful",
              "Touched",
              "Guilt",
              "Regret",
              "Remorseful",
              "Sorry",
              "Hopeful",
              "Encouraged",
              "Expectant",
              "Optimistic",
              "Trusting",
              "Powerless",
              "Impotent",
              "Incapable",
              "Resigned",
              "Trapped",
              "Victimized",
              "Tender",
              "Calm",
              "Caring",
              "Loving",
              "Reflective",
              "Self-loving",
              "Serene",
              "Vulnerable",
              "Warm",
              "Stressed",
              "Tense",
              "Anxious",
              "Burned-out",
              "Cranky",
              "Depleted",
              "Edgy",
              "Exhausted",
              "Frazzled",
              "Overwhelmed",
              "Rattled",
              "Rejecting",
              "Restless",
              "Shaken",
              "Tight",
              "Weary",
              "Worn-out",
              "Unsettled",
              "Doubtful",
              "Apprehensive",
              "Concerned",
              "Dissatisfied",
              "Disturbed",
              "Grouchy",
              "Hesitant",
              "Inhibited",
              "Perplexed",
              "Questioning",
              "Rejecting",
              "Reluctant",
              "Shocked",
              "Skeptical",
              "Suspicious",
              "Ungrounded",
              "Unsure",
              "Worried"
            ])

        selection <= 1 ->
          ""
      end

    emotion
  end

  def get_space do
    selection = Enum.random(1..10)
    # IO.puts(selection)

    space =
      cond do
        selection > 5 ->
          " controlling a " <>
            Enum.random(["tiny", "small", "average sized", "large", "huge"]) <> " space"

        selection <= 5 ->
          ""
      end

    space
  end

  def get_center_of_gravity do
    selection = Enum.random(1..10)
    # IO.puts(selection)

    cog =
      cond do
        selection > 5 ->
          " whose center of gravity is " <>
            Enum.random([
              "pulling you up from the top of your head",
              "extending from your forehead towards the horizon",
              "pulling you forward from your nose",
              "pulling you by your chin",
              "pulling you by your collarbones",
              "pulling you by your shoulders, one at a time",
              "pulling you by your shoulders at the same time",
              "pulling you by your chest",
              "pulling you by a string attached to your belly-button",
              "pulling you by your hips, one at a time",
              "pulling you by your pelvis",
              "pulling you by your thighs",
              "pulling you by your knees",
              "pulling you by your shins",
              "pulling you by your ankles",
              "pulling you down by the bottoms of your feet"
            ])

        selection <= 5 ->
          ""
      end

    cog
  end

  def get_action do
    selection = Enum.random(1..10)
    IO.puts("Inside action: ")
    IO.puts(selection)

    action =
      cond do
        selection > 3 ->
          " who is " <>
            Enum.random([
              "Mowing the lawn",
              "Vacuuming the house",
              "Doing the dishes",
              "Walking the dog",
              "Sweeping the porch",
              "Cleaning the windows",
              "Organizing the garage",
              "Watering the plants",
              "Trimming hedges",
              "Weeding the garden",
              "Cleaning out the gutters",
              "Wiping down countertops",
              "Dusting furniture",
              "Changing the oil in a car",
              "Cleaning out the fridge",
              "Washing windows",
              "Polishing silverware",
              "Sweeping the driveway",
              "Scrubbing the bathtub",
              "Cleaning the oven",
              "Wiping down baseboards",
              "Washing the dishes",
              "Emptying the trash cans",
              "Cleaning out the pantry",
              "Wiping down kitchen cabinets",
              "Cleaning the bathroom sink",
              "Organizing closets",
              "Vacuuming car interior",
              "Sweeping the patio",
              "Washing outdoor furniture",
              "Hiring a personal financial advisor",
              "Building a custom dream home",
              "Starting a charitable foundation",
              "Purchasing a luxury sports car",
              "Investing in a private vineyard",
              "Going on a round-the-world cruise",
              "Purchasing a beachfront property",
              "Creating a scholarship program",
              "Investing in renewable energy projects",
              "Launching a tech startup",
              "Hiring a personal chef and nutritionist",
              "Building a state-of-the-art home theater",
              "Setting up a wildlife conservation fund",
              "Investing in a private island resort",
              "Starting a fashion line",
              "Purchasing a historic castle",
              "Creating an art scholarship",
              "Investing in space tourism",
              "Buying a racehorse",
              "Setting up a wellness retreat center",
              "Purchasing a luxury yacht",
              "Investing in a sustainable agriculture project",
              "Starting a music production company",
              "Buying a professional sports team",
              "Investing in a private space exploration company",
              "Building a world-class golf course",
              "Setting up a scientific research institute",
              "Purchasing a rare car collection",
              "Creating a foundation for medical research",
              "Losing a job unexpectedly",
              "Facing a serious illness",
              "Experiencing a major financial setback",
              "Dealing with a natural disaster",
              "Going through a painful breakup",
              "Experiencing a home burglary",
              "Facing a significant legal issue",
              "Dealing with a sudden car accident",
              "Experiencing a house fire",
              "Going through a divorce",
              "Dealing with a family member's addiction",
              "Experiencing a major betrayal",
              "Facing a serious injury",
              "Dealing with a loved one's death",
              "Experiencing a business failure",
              "Facing a serious health diagnosis",
              "Dealing with a foreclosure",
              "Experiencing a relationship breakdown",
              "Facing a significant debt burden",
              "Dealing with a workplace harassment",
              "Experiencing a major car breakdown",
              "Facing a long-term unemployment",
              "Dealing with a financial scam",
              "Experiencing a natural disaster",
              "Facing a serious illness",
              "Dealing with a family conflict",
              "Experiencing a home foreclosure",
              "Facing a mental health crisis",
              "Dealing with a bankruptcy",
              "Experiencing a relationship breakdown",
              "Experiencing the loss of a loved one",
              "Getting married",
              "Graduating from college",
              "Starting a new job",
              "Retiring from work",
              "Moving to a new city",
              "Buying your first home",
              "Having a child",
              "Sending your child off to college",
              "Getting divorced",
              "Starting a business",
              "Battling a serious illness",
              "Going through a breakup",
              "Achieving a lifelong dream",
              "Facing financial hardship",
              "Traveling solo to a foreign country",
              "Completing a marathon",
              "Volunteering for a cause you're passionate about",
              "Learning a new language",
              "Going back to school",
              "Overcoming a fear",
              "Reaching a significant milestone age",
              "Adopting a pet",
              "Experiencing a natural disaster",
              "Joining the military",
              "Surviving a major accident",
              "Becoming a caregiver for a family member",
              "Winning a prestigious award",
              "Taking a sabbatical to travel",
              "Getting promoted to a leadership position"
            ])

        selection <= 3 ->
          ""
      end

    action
  end
end
